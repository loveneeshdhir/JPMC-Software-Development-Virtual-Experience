From 210e789cb45556f771069fc4e73a7c995a85590d Mon Sep 17 00:00:00 2001
From: Loveneesh Dhir <dhirloveneesh@gmail.com>
Date: Fri, 24 Apr 2020 17:06:37 +0530
Subject: [PATCH] Create Patch File

---
 client3.py     | 10 +++++++---
 client_test.py | 13 ++++++++++++-
 2 files changed, 19 insertions(+), 4 deletions(-)

diff --git a/client3.py b/client3.py
index f1771c3..b0fbea9 100644
--- a/client3.py
+++ b/client3.py
@@ -35,14 +35,16 @@ def getDataPoint(quote):
 	stock = quote['stock']
 	bid_price = float(quote['top_bid']['price'])
 	ask_price = float(quote['top_ask']['price'])
-	price = bid_price
+	price = (bid_price + ask_price)/2
 	return stock, bid_price, ask_price, price
 
 def getRatio(price_a, price_b):
 	""" Get ratio of price_a and price_b """
 	""" ------------- Update this function ------------- """
 	""" Also create some unit tests for this function in client_test.py """
-	return 1
+	if price_b == 0:
+    		return
+	return (price_a / price_b)
 
 # Main
 if __name__ == "__main__":
@@ -52,8 +54,10 @@ if __name__ == "__main__":
 		quotes = json.loads(urllib.request.urlopen(QUERY.format(random.random())).read())
 
 		""" ----------- Update to get the ratio --------------- """
+		prices = {}
 		for quote in quotes:
 			stock, bid_price, ask_price, price = getDataPoint(quote)
+			prices[stock] = price
 			print ("Quoted %s at (bid:%s, ask:%s, price:%s)" % (stock, bid_price, ask_price, price))
 
-		print ("Ratio %s" % getRatio(price, price))
+		print ("Ratio %s" % getRatio(prices['ABC'], prices['DEF']))
diff --git a/client_test.py b/client_test.py
index af2bf26..df5d798 100644
--- a/client_test.py
+++ b/client_test.py
@@ -8,6 +8,8 @@ class ClientTest(unittest.TestCase):
       {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
     ]
     """ ------------ Add the assertion below ------------ """
+    for quote in quotes:
+          self.assertAlmostEqual(getDataPoint(quotes), (quotes['stock'], float(quotes['top_bid']['price']), float(quotes['top_ask']['price']), (float(quotes['top_bid']['price'])+float(quotes['top_ask']['price']))/2))
 
   def test_getDataPoint_calculatePriceBidGreaterThanAsk(self):
     quotes = [
@@ -15,9 +17,18 @@ class ClientTest(unittest.TestCase):
       {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
     ]
     """ ------------ Add the assertion below ------------ """
-
+    for quote in quotes:
+          self.assertAlmostEqual(getDataPoint(quotes), (quotes['stock'], float(quotes['top_bid']['price']), float(quotes['top_ask']['price']), (float(quotes['top_bid']['price'])+float(quotes['top_ask']['price']))/2))
 
   """ ------------ Add more unit tests ------------ """
+  def test_getDataPoint_calculatePriceBidEqualtoNegativeAsk(self):
+    quotes = [
+      {'top_ask': {'price': -120.00, 'size': 36}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 120.00, 'size': 109}, 'id': '0.109974697771', 'stock': 'ABC'},
+      {'top_ask': {'price': -117.87, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
+    ]
+    """ ------------ Add the assertion below ------------ """
+    for quote in quotes:
+          self.assertAlmostEqual(getDataPoint(quotes), (quotes['stock'], float(quotes['top_bid']['price']), float(quotes['top_ask']['price']), (float(quotes['top_bid']['price'])+float(quotes['top_ask']['price']))/2))
 
 
 
-- 
2.25.1.windows.1

